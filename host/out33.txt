{'body': [{'comments': [],
	 'expression': {'arguments': [{'body': {'body': [{'comments': [],
		'declarations': [{'id': {'name': u'url',
			 'type': u'Identifier'},
				'init': {'computed': False,
				 'object': {'comments': [],
					'name': u'details',
					'type': u'Identifier'},
				 'property': {'name': u'url',
			'type': u'Identifier'},
				 'type': u'MemberExpression'},
				'type': u'VariableDeclarator'}],
		'kind': 'var',
		'type': u'VariableDeclaration'},
					 {'body': {'body': [{'alternate': None,
				 'comments': [],
				 'consequent': {'body': [{'argument': {'comments': [],
			 'properties': [{'comments': [],
			 'computed': False,
			 'key': {'name': u'cancel',
			 'type': u'Identifier'},
			 'kind': u'init',
			 'method': False,
			 'shorthand': False,	
			 'type': u'Property',
			 'value': {'comments': [],
				 'raw': None,
				 'type': u'Literal',
				 'value': True}}],
			 'type': u'ObjectExpression'},
				'comments': [],
				'type': u'ReturnStatement'}],
				'type': u'BlockStatement'},
				 'test': {'left': {'arguments': [{'computed': True,
				'object': {'computed': False,
					 'object': {'comments': [],
				'name': u'ibneler',
				'type': u'Identifier'},
					 'property': {'name': u'length',
					'type': u'Identifier'},
					 'type': u'MemberExpression'},
				'property': {'comments': [],
			 'name': u'i',
			 'type': u'Identifier'},
				'type': u'MemberExpression'}],
				 'callee': {'computed': False,
			'object': {'comments': [],
				 'name': u'url',
				 'type': u'Identifier'},
			'property': {'name': u'indexOf',
				 'type': u'Identifier'},
			'type': u'MemberExpression'},
				 'type': u'CallExpression'},
				'operator': u'>',
				'right': {'argument': {'comments': [],
				 'raw': None,
				 'type': u'Literal',
				 'value': 1.0},
					'operator': u'-',
					'prefix': True,
					'type': u'UnaryExpression'},
				'type': u'BinaryExpression'},
				 'type': u'IfStatement'}],
			 'type': u'BlockStatement'},
		'comments': [],
		'init': {'declarations': [{'id': {'name': u'i',
				'type': u'Identifier'},
				 'init': {'comments': [],
				'raw': None,
				'type': u'Literal',
				'value': 0.0},
				 'type': u'VariableDeclarator'}],
			 'kind': 'var',
			 'type': u'VariableDeclaration'},
		'test': {'left': {'comments': [],
				'name': u'i',
				'type': u'Identifier'},
			 'operator': u'<',
			 'right': {'computed': False,
				 'object': {'comments': [],
					'name': u'ibneler',
					'type': u'Identifier'},
				 'property': {'name': u'length',
			'type': u'Identifier'},
				 'type': u'MemberExpression'},
			 'type': u'BinaryExpression'},
		'type': u'ForStatement',
		'update': {'argument': {'comments': [],
			'name': u'i',
			'type': u'Identifier'},
			 'operator': u'++',
			 'prefix': False,
			 'type': u'UpdateExpression'}}],
					'type': u'BlockStatement'},
				 'comments': [],
				 'defaults': [],
				 'expression': False,
				 'generator': False,
				 'id': None,
				 'params': [{'name': u'details',
		 'type': u'Identifier'}],
				 'type': u'FunctionExpression'},
				{'comments': [],
				 'properties': [{'comments': [],
				 'computed': False,
				 'key': {'name': u'urls',
				 'type': u'Identifier'},
				 'kind': u'init',
				 'method': False,
				 'shorthand': False,
				 'type': u'Property',
				 'value': {'elements': [{'comments': [],
				 'raw': None,
				 'type': u'Literal',
				 'value': u'<all_urls>'}],
					 'type': u'ArrayExpression'}}],
				 'type': u'ObjectExpression'},
				{'elements': [{'comments': [],
			 'raw': None,
			 'type': u'Literal',
			 'value': u'blocking'}],
				 'type': u'ArrayExpression'}],
					'callee': {'computed': False,
		 'object': {'computed': False,
				'object': {'computed': False,
					 'object': {'comments': [],
			'name': u'chrome',
			'type': u'Identifier'},
					 'property': {'name': u'webRequest',
				'type': u'Identifier'},
					 'type': u'MemberExpression'},
				'property': {'name': u'onBeforeRequest',
		 'type': u'Identifier'},
				'type': u'MemberExpression'},
		 'property': {'name': u'addListener',
					'type': u'Identifier'},
		 'type': u'MemberExpression'},
					'type': u'CallExpression'},
	 'type': u'ExpressionStatement'},
	{'comments': [], 'type': u'EmptyStatement'}],
 'type': u'Program'}
